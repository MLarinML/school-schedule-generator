#!/usr/bin/env node

const nodemailer = require('nodemailer');

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è: 45YqZNRqBM5qWpd\n');

const variants = [
  {
    name: '–ü–æ—Ä—Ç 465 + SSL',
    config: {
      host: 'smtp.yandex.ru',
      port: 465,
      secure: true,
      auth: { 
        user: 'umnoeraspisanie@yandex.ru', 
        pass: '45YqZNRqBM5qWpd' 
      }
    }
  },
  {
    name: '–ü–æ—Ä—Ç 587 + TLS',
    config: {
      host: 'smtp.yandex.ru',
      port: 587,
      secure: false,
      auth: { 
        user: 'umnoeraspisanie@yandex.ru', 
        pass: '45YqZNRqBM5qWpd' 
      }
    }
  }
];

async function testVariant(variant) {
  return new Promise((resolve) => {
    console.log(`üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º: ${variant.name}`);
    const transporter = nodemailer.createTransport(variant.config);
    transporter.verify((error, success) => {
      if (error) {
        console.log(`‚ùå ${variant.name}: ${error.message}`);
        resolve(false);
      } else {
        console.log(`‚úÖ ${variant.name}: –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!`);
        resolve(true);
      }
    });
  });
}

async function runTests() {
  let successCount = 0;
  
  for (const variant of variants) {
    const success = await testVariant(variant);
    if (success) successCount++;
    console.log('');
  }
  
  console.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:');
  console.log(`‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö: ${successCount}`);
  console.log(`‚ùå –ù–µ—É–¥–∞—á–Ω—ã—Ö: ${variants.length - successCount}`);
  
  if (successCount > 0) {
    console.log('\nüéâ –ù–∞–π–¥–µ–Ω–∞ —Ä–∞–±–æ—á–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è!');
    console.log('üí° –û–±–Ω–æ–≤–∏—Ç–µ —Ñ–∞–π–ª .env —Å —Ä–∞–±–æ—á–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏');
  } else {
    console.log('\n‚ùå –ù–∏ –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Yandex –∞–∫–∫–∞—É–Ω—Ç–∞');
  }
}

runTests().catch(console.error);
